package rules.cep;
dialect  "mvel"

import live.healthy.events.IntakeSubmitEvent
import live.healthy.events.IntakeSubmitType;
import live.healthy.events.CreateRewardEvent;

import live.healthy.facts.model.plan.NutritionPlan;
import live.healthy.facts.model.plan.PlanFollowingEnum;
import live.healthy.facts.model.user.User;


rule "count"
    when
        $number: Number(intValue >= 0) from accumulate(
            $i2: IntakeSubmitEvent(
                submitType == IntakeSubmitType.REGULAR
            ),
            count($i2)
        )
    then
        System.out.println("Number of regular Intake submits: " + $number);
end

rule "More than 4 regular submits"
    salience 3
    when
        $i1: IntakeSubmitEvent($intakeUserId: userId, submitType == IntakeSubmitType.REGULAR)
        $number: Number(intValue >= 4) from accumulate(
            $i2: IntakeSubmitEvent(
                this != $i1,
                submitType == IntakeSubmitType.REGULAR,
                userId == $intakeUserId
            ),
            count($i2)
        )
        not (IntakeSubmitEvent(userId == $intakeUserId, submitType == IntakeSubmitType.IRREGULAR))
        $nutritionPlan: NutritionPlan(planFollowingEnum == PlanFollowingEnum.REGULAR)
        $user: User(id == $intakeUserId, nutritionPlan.id == $nutritionPlan.id)
    then
        insert(new CreateRewardEvent($intakeUserId, $nutritionPlan.id));
        System.out.println("User has made 4 or more days with planned intakes. User id: " + $number);
end



rule "Ready for reward"
    salience 2
    when
        $nutritionPlan: NutritionPlan(planFollowingEnum == PlanFollowingEnum.REGULAR)
        $user: User()
        CreateRewardEvent(userId == $user.id, nutritionPlanId == $nutritionPlan.id);
    then
        $nutritionPlan.setPlanFollowingEnum(PlanFollowingEnum.REWARDED);
        update($nutritionPlan)
        System.out.println("Reward for user with id: " + $user.id + " with nutrition plan with id " + $nutritionPlan.id);
end

rule "Irregular submit made when nutrition plan is regular"
    salience 1
    when
        $i1: IntakeSubmitEvent($intakeUserId: userId, submitType == IntakeSubmitType.IRREGULAR);
        $nutritionPlan: NutritionPlan(planFollowingEnum == PlanFollowingEnum.REGULAR)
    then
        $nutritionPlan.setPlanFollowingEnum(PlanFollowingEnum.PUNISHED);
        update($nutritionPlan)
        System.out.println("Nutrition plan was regular, and now is punished. Id: " + $nutritionPlan.id);
end

rule "Irregular submit made when nutrition plan is rewarded"
    salience 1
    when
        $i1: IntakeSubmitEvent($intakeUserId: userId, submitType == IntakeSubmitType.IRREGULAR);
        $nutritionPlan: NutritionPlan(planFollowingEnum == PlanFollowingEnum.REWARDED)
    then
        $nutritionPlan.setPlanFollowingEnum(PlanFollowingEnum.REGULAR);
        update($nutritionPlan)
        System.out.println("Nutrition plan was rewarded, and now is regular. Id: " + $nutritionPlan.id);
end


